{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\francisco.mercado\\\\source\\\\repos\\\\curso-intro-react\\\\src\\\\App\\\\AppUI.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\nimport { TodoForm } from \"../TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppUI() {\n  _s();\n\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal\n  } = React.useContext(TodoContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"An error has ocurred.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tihs page is loading.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this), !loading && !searchedTodos.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your first todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 57\n      }, this), searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppUI, \"ne8Fqx3aoSmc5pBTzUwDiB1EWFs=\");\n\n_c = AppUI;\nexport { AppUI };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"sources":["C:/Users/francisco.mercado/source/repos/curso-intro-react/src/App/AppUI.js"],"names":["React","TodoContext","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","Modal","TodoForm","AppUI","error","loading","searchedTodos","completeTodo","deleteTodo","openModal","setOpenModal","useContext","length","map","todo","text","completed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA;AAPE,MAQFhB,KAAK,CAACiB,UAAN,CAAiBhB,WAAjB,CARJ;AAUA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,QAAD;AAAA,iBACKS,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,EAEKC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFhB,EAGM,CAACA,OAAD,IAAY,CAACC,aAAa,CAACM,MAA5B,iBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH5C,EAKKN,aAAa,CAACO,GAAd,CAAkBC,IAAI,iBACvB,QAAC,QAAD;AAEI,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFf;AAGI,QAAA,SAAS,EAAED,IAAI,CAACE,SAHpB;AAII,QAAA,UAAU,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACC,IAAN,CAJlC;AAKI,QAAA,QAAQ,EAAE,MAAMP,UAAU,CAACM,IAAI,CAACC,IAAN;AAL9B,SACSD,IAAI,CAACC,IADd;AAAA;AAAA;AAAA;AAAA,cADC,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAoBKN,SAAS,iBACN,QAAC,KAAD;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBR,eA0BI,QAAC,gBAAD;AACI,MAAA,YAAY,EAAEC;AADlB;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA3CQP,K;;KAAAA,K;AA6CT,SAASA,KAAT","sourcesContent":["import React from \"react\";\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { Modal } from '../Modal';\r\nimport { TodoForm } from \"../TodoForm\";\r\n\r\nfunction AppUI() {\r\n    const {\r\n        error, \r\n        loading, \r\n        searchedTodos, \r\n        completeTodo, \r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n\r\n            <TodoList>\r\n                {error && <p>An error has ocurred.</p>}\r\n                {loading && <p>Tihs page is loading.</p>}\r\n                {(!loading && !searchedTodos.length) && <p>Create your first todo</p>}\r\n\r\n                {searchedTodos.map(todo => (\r\n                <TodoItem\r\n                    key={todo.text}\r\n                    text={todo.text}\r\n                    completed={todo.completed}\r\n                    onComplete={() => completeTodo(todo.text)}\r\n                    onDelete={() => deleteTodo(todo.text)}\r\n                />\r\n                ))}\r\n            </TodoList>\r\n\r\n            {openModal && (\r\n                <Modal>\r\n                    <TodoForm />\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton \r\n                setOpenModal={setOpenModal}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { AppUI };"]},"metadata":{},"sourceType":"module"}