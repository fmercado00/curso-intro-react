{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fmerc\\\\Source\\\\Repos\\\\curso-intro-react\\\\src\\\\TodoContext\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const completedTodos = todos.filter(todo => todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = []; // Lógica para filtrar\n\n  searchedTodos = todos;\n\n  if (searchValue.length >= 1) {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      deleteTodo\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"4hIyBMkISr5q8yaCZEGToef7bPw=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["C:/Users/fmerc/Source/Repos/curso-intro-react/src/TodoContext/index.js"],"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACxB,QAAM;AACFC,IAAAA,IAAI,EAAEC,KADJ;AAEFC,IAAAA,QAAQ,EAAEC,SAFR;AAGFC,IAAAA,OAHE;AAIFC,IAAAA;AAJE,MAKAV,eAAe,CAAC,UAAD,EAAa,EAAb,CALrB;AAME,QAAK,CAACW,WAAD,EAAcC,cAAd,IAA8Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAnC;AAEA,QAAMC,cAAc,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,EAAqCC,MAA5D;AACA,QAAMC,UAAU,GAAGb,KAAK,CAACY,MAAzB;AAEA,MAAIE,aAAa,GAAG,EAApB,CAZsB,CActB;;AACAA,EAAAA,aAAa,GAAGd,KAAhB;;AACA,MAAIK,WAAW,CAACO,MAAZ,IAAsB,CAA1B,EAA6B;AACzBE,IAAAA,aAAa,GAAGd,KAAK,CAACS,MAAN,CACfC,IAAI,IACH;AACE,YAAMK,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUC,WAAV,EAAjB;AACA,YAAMC,UAAU,GAAGb,WAAW,CAACY,WAAZ,EAAnB;AACA,aAAOF,QAAQ,CAACI,QAAT,CAAkBD,UAAlB,CAAP;AACD,KANa,CAAhB;AAQH;;AAED,QAAME,YAAY,GAAIJ,IAAD,IAAS;AAC5B,UAAMK,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBZ,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB;AACA,UAAMO,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAjB;AACAuB,IAAAA,QAAQ,CAACF,SAAD,CAAR,CAAoBV,SAApB,GAAgC,IAAhC;AACAT,IAAAA,SAAS,CAACqB,QAAD,CAAT;AACD,GALD;;AAOA,QAAMC,UAAU,GAAIR,IAAD,IAAS;AAC1B,UAAMK,SAAS,GAAGrB,KAAK,CAACsB,SAAN,CAAgBZ,IAAI,IAAIA,IAAI,CAACM,IAAL,KAAcA,IAAtC,CAAlB;AACA,UAAMO,QAAQ,GAAG,CAAC,GAAGvB,KAAJ,CAAjB;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgBJ,SAAhB,EAA2B,CAA3B;AACAnB,IAAAA,SAAS,CAACqB,QAAD,CAAT;AACD,GALD;;AAMF,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBpB,MAAAA,OADyB;AAEzBC,MAAAA,KAFyB;AAGzBS,MAAAA,UAHyB;AAIzBL,MAAAA,cAJyB;AAKzBH,MAAAA,WALyB;AAMzBC,MAAAA,cANyB;AAOzBQ,MAAAA,aAPyB;AAQzBM,MAAAA,YARyB;AASzBI,MAAAA;AATyB,KAA7B;AAAA,cAWK1B,KAAK,CAAC4B;AAXX;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvDQ7B,Y;UAMCH,e;;;KANDG,Y;AAyDT,SAASF,WAAT,EAAsBE,YAAtB","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props){\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', []);\r\n      const[searchValue, setSearchValue]=React.useState('');\r\n    \r\n      const completedTodos = todos.filter(todo => todo.completed).length;\r\n      const totalTodos = todos.length;\r\n    \r\n      let searchedTodos = [];\r\n    \r\n      // Lógica para filtrar\r\n      searchedTodos = todos;\r\n      if (searchValue.length >= 1) {\r\n          searchedTodos = todos.filter\r\n          (todo => \r\n            {\r\n              const todoText = todo.text.toLowerCase();\r\n              const searchText = searchValue.toLowerCase();\r\n              return todoText.includes(searchText);\r\n            }\r\n          );\r\n      }\r\n      \r\n      const completeTodo = (text) =>{\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n      };\r\n    \r\n      const deleteTodo = (text) =>{\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n      };\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            deleteTodo,\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider};"]},"metadata":{},"sourceType":"module"}