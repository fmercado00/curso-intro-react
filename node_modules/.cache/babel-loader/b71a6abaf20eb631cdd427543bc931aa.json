{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\francisco.mercado\\\\source\\\\repos\\\\curso-intro-react\\\\src\\\\TodoForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  // Creamos un estado para nuestro nuevo TODO\n  const [newTodoValue, setNewTodoValue] = React.useState(''); // Desestructuramos las funciones que necesitamos para añadir un TODO y cerrar nuestro modal\n\n  const {\n    addTodo,\n    setOpenModal\n  } = React.useContext(TodoContext); // Creamos una función para actualizar el estado de nuestro nuevo TODO\n\n  const onChange = event => {\n    setNewTodoValue(event.target.value);\n  }; // Función para cerrar el modal\n\n\n  const onCancel = () => {\n    setOpenModal(false);\n  }; // Función para agregar nuestro nuevo TODO\n\n\n  const onSubmit = event => {\n    // prevent default para evitar recargar la página\n    event.preventDefault(); // Utilizamos nuestra función para añadir nuestro TODO\n\n    addTodo(newTodoValue); // Cerramos nustro modal\n\n    setOpenModal(false); // También estaría bien resetear nuestro formulario\n\n    setNewTodoValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Escribe tu nuevo TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newTodoValue,\n      onChange: onChange,\n      placeholder: \"Cortar la cebolla para el almuerzo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoForm-buttonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"TodoForm-button TodoForm-button--cancel\",\n        onClick: onCancel,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"TodoForm-button TodoForm-button--add\",\n        children: \"A\\xF1adir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"5TLrQRiX7h6rdtcvigvP9adn9sk=\");\n\n_c = TodoForm;\nexport { TodoForm };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/francisco.mercado/source/repos/curso-intro-react/src/TodoForm/index.js"],"names":["React","TodoContext","TodoForm","newTodoValue","setNewTodoValue","useState","addTodo","setOpenModal","useContext","onChange","event","target","value","onCancel","onSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxC,CAFkB,CAGlB;;AACA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA;AAFI,MAGFP,KAAK,CAACQ,UAAN,CAAiBP,WAAjB,CAHJ,CAJkB,CASlB;;AACA,QAAMQ,QAAQ,GAAIC,KAAD,IAAW;AAC1BN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD,CAVkB,CAclB;;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD,CAfkB,CAmBlB;;;AACA,QAAMO,QAAQ,GAAIJ,KAAD,IAAW;AAC1B;AACAA,IAAAA,KAAK,CAACK,cAAN,GAF0B,CAG1B;;AACAT,IAAAA,OAAO,CAACH,YAAD,CAAP,CAJ0B,CAK1B;;AACAI,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAN0B,CAO1B;;AACAH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEU,QAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEX,YADT;AAEE,MAAA,QAAQ,EAAEM,QAFZ;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,yCAFZ;AAGE,QAAA,OAAO,EAAEI,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,sCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxDQX,Q;;KAAAA,Q;AA0DT,SAASA,QAAT","sourcesContent":["import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm() {\r\n  // Creamos un estado para nuestro nuevo TODO\r\n  const [newTodoValue, setNewTodoValue] = React.useState('');\r\n  // Desestructuramos las funciones que necesitamos para añadir un TODO y cerrar nuestro modal\r\n  const {\r\n    addTodo,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext);\r\n  \r\n  // Creamos una función para actualizar el estado de nuestro nuevo TODO\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n  \r\n  // Función para cerrar el modal\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n  \r\n  // Función para agregar nuestro nuevo TODO\r\n  const onSubmit = (event) => {\r\n    // prevent default para evitar recargar la página\r\n    event.preventDefault();\r\n    // Utilizamos nuestra función para añadir nuestro TODO\r\n    addTodo(newTodoValue);\r\n    // Cerramos nustro modal\r\n    setOpenModal(false);\r\n    // También estaría bien resetear nuestro formulario\r\n    setNewTodoValue('')\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Escribe tu nuevo TODO</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder=\"Cortar la cebolla para el almuerzo\"\r\n      />\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button--cancel\"\r\n          onClick={onCancel}\r\n          >\r\n          Cancelar\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"TodoForm-button TodoForm-button--add\"\r\n        >\r\n          Añadir\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { TodoForm };"]},"metadata":{},"sourceType":"module"}